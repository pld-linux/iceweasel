--- mozilla/toolkit/mozapps/installer/packager.mk.org	2010-01-21 21:10:00.234466295 +0100
+++ mozilla/toolkit/mozapps/installer/packager.mk	2010-01-21 21:10:29.847369216 +0100
@@ -362,13 +362,13 @@
 # NOTE: this must be a tar now that dist links into the tree so that we
 # do not strip the binaries actually in the tree.
 	@echo "Creating package directory..."
-	@mkdir $(DIST)/$(MOZ_PKG_DIR)
+	@mkdir -p $(DESTDIR)/$(MOZ_PKG_APPDIR)
 ifdef MOZ_PKG_MANIFEST
 	$(RM) -rf $(DIST)/xpt
 	$(call PACKAGER_COPY, "$(call core_abspath,$(DIST))",\
-		 "$(call core_abspath,$(DIST)/$(MOZ_PKG_DIR))", \
+		 "$(call core_abspath,$(DESTDIR)/$(MOZ_PKG_APPDIR))", \
 		"$(MOZ_PKG_MANIFEST)", "$(PKGCP_OS)", 1, 0, 1)
-	$(PERL) $(MOZILLA_DIR)/xpinstall/packager/xptlink.pl -s $(DIST) -d $(DIST)/xpt -f $(DIST)/$(MOZ_PKG_DIR)/$(_BINPATH)/components -v -x "$(XPIDL_LINK)"
+	$(PERL) $(MOZILLA_DIR)/xpinstall/packager/xptlink.pl -s $(DIST) -d $(DIST)/xpt -f $(DESTDIR)/$(MOZ_PKG_APPDIR)/$(_BINPATH)/components -v -x "$(XPIDL_LINK)"
 else # !MOZ_PKG_MANIFEST
 ifeq ($(MOZ_PKG_FORMAT),DMG)
 # If UNIVERSAL_BINARY, the package will be made from an already-prepared
@@ -377,11 +377,11 @@
 ifndef STAGE_SDK
 	@cd $(DIST) && rsync -auv --copy-unsafe-links $(_APPNAME) $(MOZ_PKG_DIR)
 else
-	@cd $(DIST)/bin && tar $(TAR_CREATE_FLAGS) - * | (cd ../$(MOZ_PKG_DIR); tar -xf -)
+	cp -rfLp $(DIST)/bin/* $(DESTDIR)$(MOZ_PKG_APPDIR)
 endif
 endif
 else
-	@cd $(DIST)/bin && tar $(TAR_CREATE_FLAGS) - * | (cd ../$(MOZ_PKG_DIR); tar -xf -)
+	cp -rfLp $(DIST)/bin/* $(DESTDIR)$(MOZ_PKG_APPDIR)
 	@echo "Linking XPT files..."
 	@rm -rf $(DIST)/xpt
 	@$(NSINSTALL) -D $(DIST)/xpt
@@ -450,24 +450,33 @@
 	$(error "make install" is not supported on this platform. Use "make package" instead.)
 endif
 	$(NSINSTALL) -D $(DESTDIR)$(installdir)
-	(cd $(DIST)/$(MOZ_PKG_DIR) && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(installdir) && tar -xf -)
 	$(NSINSTALL) -D $(DESTDIR)$(bindir)
 	$(RM) -f $(DESTDIR)$(bindir)/$(MOZ_APP_NAME)
-	ln -s $(installdir)/$(MOZ_APP_NAME) $(DESTDIR)$(bindir)
+	ln -s $(installdir)/$(MOZ_APP_NAME)-bin $(DESTDIR)$(bindir)/$(MOZ_APP_NAME)
+	$(RM) -f $(DESTDIR)$(bindir)/regxpcom
+	ln -s $(installdir)/regxpcom $(DESTDIR)$(bindir)/regxpcom
+	$(RM) -f $(DESTDIR)$(bindir)/xpcshell
+	ln -s $(installdir)/xpcshell $(DESTDIR)$(bindir)/xpcshell
+	$(RM) -f $(DESTDIR)$(bindir)/xpidl
+	ln -s $(installdir)/xpidl $(DESTDIR)$(bindir)/xpidl
+	$(RM) -f $(DESTDIR)$(bindir)/xpt_dump
+	ln -s $(installdir)/xpt_dump $(DESTDIR)$(bindir)/xpt_dump
+	$(RM) -f $(DESTDIR)$(bindir)/xpt_link
+	ln -s $(installdir)/xpt_link $(DESTDIR)$(bindir)/xpt_link
 ifdef INSTALL_SDK # Here comes the hard part
 	$(NSINSTALL) -D $(DESTDIR)$(includedir)
-	(cd $(DIST)/include && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(includedir) && tar -xf -)
+	cp -rfLp $(DIST)/include/* $(DESTDIR)$(includedir)
 	$(NSINSTALL) -D $(DESTDIR)$(idldir)
-	(cd $(DIST)/idl && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(idldir) && tar -xf -)
+	cp -rfLp $(DIST)/idl/* $(DESTDIR)$(idldir)
 # SDK directory is the libs + a bunch of symlinks
 	$(NSINSTALL) -D $(DESTDIR)$(sdkdir)/sdk/lib
 	if test -f $(DIST)/include/xpcom-config.h; then \
 	  $(SYSINSTALL) $(IFLAGS1) $(DIST)/include/xpcom-config.h $(DESTDIR)$(sdkdir); \
 	fi
-	(cd $(DIST)/sdk/lib && tar $(TAR_CREATE_FLAGS) - .) | (cd $(DESTDIR)$(sdkdir)/sdk/lib && tar -xf -)
+	cp -rfLp $(DIST)/sdk/lib/*.a $(DESTDIR)$(sdkdir)/sdk/lib
+	ln -s $(installdir)/libmozjs.so $(DESTDIR)$(sdkdir)/sdk/lib/libmozjs.so
+	ln -s $(installdir)/libxpcom.so $(DESTDIR)$(sdkdir)/sdk/lib/libxpcom.so
+	ln -s $(installdir)/libxul.so $(DESTDIR)$(sdkdir)/sdk/lib/libxul.so
 	$(RM) -f $(DESTDIR)$(sdkdir)/lib $(DESTDIR)$(sdkdir)/bin $(DESTDIR)$(sdkdir)/include $(DESTDIR)$(sdkdir)/include $(DESTDIR)$(sdkdir)/sdk/idl $(DESTDIR)$(sdkdir)/idl
 	ln -s $(sdkdir)/sdk/lib $(DESTDIR)$(sdkdir)/lib
 	ln -s $(installdir) $(DESTDIR)$(sdkdir)/bin
